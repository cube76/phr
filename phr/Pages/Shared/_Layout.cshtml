
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>@ViewData["Title"] - IEM</title>
	<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
	<link rel="stylesheet" href="~/lib/icons/font/bootstrap-icons.min.css">
	<link rel="stylesheet" href="~/lib/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css">
	<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
	<link rel="stylesheet" href="~/phr.styles.css" asp-append-version="true" />
	<link rel="stylesheet" href="~/css/default-main.css" />

	<script src="~/lib/jquery/dist/jquery.min.js"></script>
	<script src="~/js/kendo.all.min.js"></script>
	<script src="~/js/kendo-ui-license.js"></script>
</head>
<body class="bg-light">
	<header>

		<div class="offcanvas offcanvas-start w-80" tabindex="-1" id="offcanvas">
			<div class="offcanvas-header">
				<h6 class="offcanvas-title d-none d-sm-block" id="offcanvas">Menu</h6>
				<button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
			</div>
			<div class="offcanvas-body px-0">
				<ul class="nav nav-pills flex-column mb-sm-auto mb-0 align-items-start" id="menu">
					<li class="nav-item">
						<a class="nav-link text-truncate" asp-area="" asp-page="/Index">
							<i class="fs-5 bi-house"></i><span class="ms-1 d-sm-inline">Beranda</span>
						</a>
					</li>
					<li>
						<a class="nav-link text-truncate" asp-page="/Exceptions/Exception">
							<i class="fs-5 bi-info-circle"></i><span class="ms-1 d-sm-inline">Exeption Signals</span>
						</a>
					</li>
					<li>
						<a class="nav-link text-truncate" asp-page="/Passed/Passed">
							<i class="fs-5 bi-reception-4"></i><span class="ms-1 d-sm-inline">Passed Signals</span>
						</a>
					</li>
					<li>
						<a class="nav-link text-truncate" asp-page="/Notification">
							<i class="fs-5 bi-bell"></i><span class="ms-1 d-sm-inline">Notifikasi</span>
						</a>
					</li>
				</ul>
			</div>
		</div>
	</header>
	<!-- toggler -->
	<button class="btn float-start" data-bs-toggle="offcanvas" data-bs-target="#offcanvas" role="button">
		<i class="bi bi-list fs-3 text-secondary" data-bs-toggle="offcanvas" data-bs-target="#offcanvas"></i>
	</button>
	@RenderBody()

	<script>
		var vapidPublicKey = "BIpSeI-eSgRnXTLbKnRwDn7IiQKwjzGoX7rZ7XV4OAg5xZJyjB8cyyZjEyb_dVZ66Lvz-baaS6JNFNWFE9IrZ6I";
		async function initServiceWorker() {
			if ('serviceWorker' in navigator) {
				const swRegistration = await navigator.serviceWorker.register('/js/site.js');

				const subscription = await swRegistration.pushManager.getSubscription();

				if (subscription) {
					// console.log('User  is already subscribed:', subscription);
					sendSubscriptionToServer(subscription);
				} else {
					subscribeUser (swRegistration);
				}
			} else {
				console.warn('Service worker is not supported');
			}
		}

		async function subscribeUser (swRegistration) {
			try {
				const subscription = await swRegistration.pushManager.subscribe({
					userVisibleOnly: true,
					applicationServerKey: urlBase64ToUint8Array(vapidPublicKey)
				});
				// console.log('User  subscribed:', subscription);
				sendSubscriptionToServer(subscription);
			} catch (error) {
				console.error('Failed to subscribe user:', error);
			}
		}

		function sendSubscriptionToServer(subscription) {
			var userId = "1232"
			fetch('https://a090-202-43-95-42.ngrok-free.app/subscribe', { //example post notification backend url
				method: 'POST',
				body: JSON.stringify({userId: userId,subscription:subscription}),
				headers: {
					'Content-Type': 'application/json'
				}
			})

			.then(response => {
				if (!response.ok) {
					throw new Error('Failed to send subscription to server');
				}
				return response.json();
			})
			.then(data => {
				console.log('Subscription sent to server:', data);
			})
			.catch(error => {
				console.error('Error sending subscription to server:', error);
			});
		};

		function urlBase64ToUint8Array(base64String) {
			const padding = '='.repeat((4 - base64String.length % 4) % 4);
			const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');
			const rawData = window.atob(base64);
			return new Uint8Array([...rawData].map(char => char.charCodeAt(0)));
		};

		window.addEventListener('load', () => {
			initServiceWorker();
		});
	</script>
	@* <script src="~/lib/jquery/dist/jquery.min.js"></script> *@
	@* <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script> *@
	<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
	<script src="~/lib/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
	<script src="~/js/site.js" asp-append-version="true"></script>

	@await RenderSectionAsync("Scripts", required: false)
</body>
</html>