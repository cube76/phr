@page
@model phr.Pages.Exceptions.Production_Surveliance.DetailGraphicModel
@{
	ViewData["Title"] = "Detail Graphic";
}
<div class="container p-2 d-flex flex-column">
	<div class="col-12 py-2 border-bottom">
		<div class="d-flex justify-content-between">
			<h4><strong>Detail Graphic</strong></h4>
			<i class="bi bi-calendar4" style="font-size: 20px;"></i>
		</div>
		<div class="text-muted">Today (4 Aug 2024)</div>
	</div>
	<div class="col-12 mt-3">
		<form class="row align-items-end">
			<div class="col">
				<label for="l1"><strong>L1</strong></label>
				<select class="form-select" id="scaleSelector">
					<option value="linear" selected>Linear</option>
					<option value="log">Logarithmic</option>
				</select>
			</div>
			<div class="col">
				<label for="name"><strong>String Name</strong></label>
				<input type="text" class="form-control" id="name" placeholder="BALAM SE-0014-01">
			</div>
			<div class="col-auto">
				<button type="button" class="btn btn-light border" data-bs-toggle="offcanvas" data-bs-target="#filterBottom"><i class="bi bi-funnel"></i></button>
			</div>
		</form>
	</div>
	<div class="alert alert-danger d-sm-none d-block my-2">
		Rotate your screen for bigger view
	</div>
	<div class="text-center" id="loading">
		<div class="spinner-border m-5" role="status">
			<span class="visually-hidden">Loading...</span>
		</div>
	</div>
	<div class="col-12 wide my-2">
		<div id="chart" width="400" height="200"></div>
	</div>
	<div class="col-12 wide">
		<div id="chart2" width="400" height="200"></div>
	</div>
</div>

<div class="offcanvas offcanvas-bottom" tabindex="-1" id="filterBottom">
	<div class="offcanvas-header">
		<div class="col">
			<div class="d-flex align-items-center">
				<button type="button" class="btn" data-bs-dismiss="offcanvas"><i class="bi bi-x-lg"></i></button>
				<h5 class="offcanvas-title" id="offcanvasBottomLabel"><strong>Filter</strong></h5>
			</div>
			<div class="ms-3">Linear Type Only</div>
		</div>
	</div>
	<div class="offcanvas-body">
		<div class="row">
			<div class="col">
				<label for="l1"><strong>L1</strong></label>
				<input type="text" class="form-control" id="l1" placeholder="Min">
			</div><div class="col d-flex">
				<input type="text" class="form-control align-self-end" placeholder="Max">
			</div>
		</div>
		<div class="row mt-3">
			<div class="col">
				<label for="l2"><strong>L2</strong></label>
				<input type="text" class="form-control" id="l2" placeholder="Min">
			</div><div class="col d-flex">
				<input type="text" class="form-control align-self-end" placeholder="Max">
			</div>
		</div>
	</div>
</div>

<script>
	const header = document.getElementById('filterBottom');
	const mediaQuery = window.matchMedia('(min-width: 400px) and (orientation: landscape)');
	let previousMatch = mediaQuery.matches;
	function updateClasses(mediaQuery) {
		if (mediaQuery.matches) {
			header.classList.remove('offcanvas-bottom');
			header.classList.add('offcanvas-end');
		} else {
			header.classList.remove('offcanvas-end');
			header.classList.add('offcanvas-bottom');
		}
		if (mediaQuery.matches !== previousMatch) {
			previousMatch = mediaQuery.matches;
			location.reload();
		}
	}

	updateClasses(mediaQuery);

	mediaQuery.addEventListener('change', updateClasses);
</script>

<script id="chartData" type="application/json">
	@Html.Raw(ViewData["ChartData"])
</script>

<script src="~/js/graph.js" asp-append-version="true"></script>